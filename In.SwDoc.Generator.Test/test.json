{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "Approver.API"
  },
  "host": "localhost",
  "basePath": "/Approver/Api/Marchiol",
  "schemes": [
    "http"
  ],
  "paths": {
    "/CampiAggiuntiviNominativi/{idNominativo}/{codCampo}/{grpCampo}": {
      "get": {
        "tags": [
          "CampiAggiuntiviNominativi"
        ],
        "summary": "Restituisce un CampoAggiuntivo Nominativo utilizzando la chiave",
        "operationId": "CampiAggiuntiviNominativi_GetCampiAggiuntiviNominativi",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "idNominativo",
            "in": "path",
            "description": "Id del Nominativo associato",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "codCampo",
            "in": "path",
            "description": "Codice del CampoAggiuntivo",
            "required": true,
            "type": "string"
          },
          {
            "name": "grpCampo",
            "in": "path",
            "description": "Gruppo del CampoAggiuntivo",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization header",
            "in": "header",
            "description": "Token di accesso restituito dall'endpoint /Token (grant_type:password,username:{Login},password:{PasswordCRIPTATA} ; DEVE essere aggiunto all'header con lo schema Bearer. Es. : \"bearer {token}\"",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CampiAggiuntiviNominativiDTO"
            }
          }
        }
      },
      "put": {
        "tags": [
          "CampiAggiuntiviNominativi"
        ],
        "summary": "Aggiorna un Campo Aggiuntivo specificando la chiave iniziale da aggiornare",
        "operationId": "CampiAggiuntiviNominativi_PutCampiAggiuntiviNominativi",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "idNominativo",
            "in": "path",
            "description": "Id del Nominativo associato",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "codCampo",
            "in": "path",
            "description": "Codice del CampoAggiuntivo",
            "required": true,
            "type": "string"
          },
          {
            "name": "grpCampo",
            "in": "path",
            "description": "Gruppo del CampoAggiuntivo",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Oggetto CampoAggiuntivo con i valori aggiornati",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CampiAggiuntiviNominativi"
            }
          },
          {
            "name": "Authorization header",
            "in": "header",
            "description": "Token di accesso restituito dall'endpoint /Token (grant_type:password,username:{Login},password:{PasswordCRIPTATA} ; DEVE essere aggiunto all'header con lo schema Bearer. Es. : \"bearer {token}\"",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "delete": {
        "tags": [
          "CampiAggiuntiviNominativi"
        ],
        "summary": "Eliminazione di un campo aggiuntivo per chiave",
        "operationId": "CampiAggiuntiviNominativi_DeleteCampiAggiuntiviNominativi",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "idNominativo",
            "in": "path",
            "description": "Id del Nominativo associato",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "codCampo",
            "in": "path",
            "description": "Codice del CampoAggiuntivo",
            "required": true,
            "type": "string"
          },
          {
            "name": "grpCampo",
            "in": "path",
            "description": "Gruppo del CampoAggiuntivo",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization header",
            "in": "header",
            "description": "Token di accesso restituito dall'endpoint /Token (grant_type:password,username:{Login},password:{PasswordCRIPTATA} ; DEVE essere aggiunto all'header con lo schema Bearer. Es. : \"bearer {token}\"",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CampiAggiuntiviNominativiDTO"
            }
          }
        }
      }
    },
    "/CampiAggiuntiviNominativi/byIdNominativo/{idNominativo}": {
      "get": {
        "tags": [
          "CampiAggiuntiviNominativi"
        ],
        "summary": "Restituisce la lista di tutti i CampiAggiuntiviNominativi asssociati ad uno specifico IdNominativo",
        "operationId": "CampiAggiuntiviNominativi_GetbyIdNominativo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "idNominativo",
            "in": "path",
            "description": "Identificativo univoco di un Nominativo",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization header",
            "in": "header",
            "description": "Token di accesso restituito dall'endpoint /Token (grant_type:password,username:{Login},password:{PasswordCRIPTATA} ; DEVE essere aggiunto all'header con lo schema Bearer. Es. : \"bearer {token}\"",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CampiAggiuntiviNominativiDTO"
            }
          }
        }
      }
    },
    "/CampiAggiuntiviNominativi": {
      "post": {
        "tags": [
          "CampiAggiuntiviNominativi"
        ],
        "summary": "Creazione di un nuovo CampoAggiuntivo associato al nominativo",
        "operationId": "CampiAggiuntiviNominativi_PostCampiAggiuntiviNominativi",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Oggetto CampoAggiuntivo con i valori aggiornati",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CampiAggiuntiviNominativi"
            }
          },
          {
            "name": "Authorization header",
            "in": "header",
            "description": "Token di accesso restituito dall'endpoint /Token (grant_type:password,username:{Login},password:{PasswordCRIPTATA} ; DEVE essere aggiunto all'header con lo schema Bearer. Es. : \"bearer {token}\"",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CampiAggiuntiviNominativiDTO"
            }
          }
        }
      }
    },
    "/CampiAggiuntiviRichieste/{idRichiesta}/{codCampo}/{grpCampo}": {
      "get": {
        "tags": [
          "CampiAggiuntiviRichieste"
        ],
        "summary": "Restituisce un CampoAggiuntivo Richiesta utilizzando la chiave",
        "operationId": "CampiAggiuntiviRichieste_GetCampiAggiuntiviRichieste",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "idRichiesta",
            "in": "path",
            "description": "Id della Richiesta associate",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "codCampo",
            "in": "path",
            "description": "Codice del CampoAggiuntivo",
            "required": true,
            "type": "string"
          },
          {
            "name": "grpCampo",
            "in": "path",
            "description": "Gruppo del CampoAggiuntivo",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization header",
            "in": "header",
            "description": "Token di accesso restituito dall'endpoint /Token (grant_type:password,username:{Login},password:{PasswordCRIPTATA} ; DEVE essere aggiunto all'header con lo schema Bearer. Es. : \"bearer {token}\"",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CampiAggiuntiviRichiesteDTO"
            }
          }
        }
      },
      "put": {
        "tags": [
          "CampiAggiuntiviRichieste"
        ],
        "summary": "Aggiorna un Campo Aggiuntivo specificando la chiave iniziale da aggiornare",
        "operationId": "CampiAggiuntiviRichieste_PutCampiAggiuntiviRichieste",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "idRichiesta",
            "in": "path",
            "description": "Id della Richiesta associate",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "codCampo",
            "in": "path",
            "description": "Codice del CampoAggiuntivo",
            "required": true,
            "type": "string"
          },
          {
            "name": "grpCampo",
            "in": "path",
            "description": "Gruppo del CampoAggiuntivo",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Oggetto CampoAggiuntivo con i valori aggiornati",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CampiAggiuntiviRichieste"
            }
          },
          {
            "name": "Authorization header",
            "in": "header",
            "description": "Token di accesso restituito dall'endpoint /Token (grant_type:password,username:{Login},password:{PasswordCRIPTATA} ; DEVE essere aggiunto all'header con lo schema Bearer. Es. : \"bearer {token}\"",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "delete": {
        "tags": [
          "CampiAggiuntiviRichieste"
        ],
        "summary": "Eliminazione di un campo aggiuntivo per chiave",
        "operationId": "CampiAggiuntiviRichieste_DeleteCampiAggiuntiviRichieste",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "idRichiesta",
            "in": "path",
            "description": "Id della Richiesta associate",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "codCampo",
            "in": "path",
            "description": "Codice del CampoAggiuntivo",
            "required": true,
            "type": "string"
          },
          {
            "name": "grpCampo",
            "in": "path",
            "description": "Gruppo del CampoAggiuntivo",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization header",
            "in": "header",
            "description": "Token di accesso restituito dall'endpoint /Token (grant_type:password,username:{Login},password:{PasswordCRIPTATA} ; DEVE essere aggiunto all'header con lo schema Bearer. Es. : \"bearer {token}\"",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CampiAggiuntiviRichiesteDTO"
            }
          }
        }
      }
    },
    "/CampiAggiuntiviRichieste/byIdRichiesta/{idRichiesta}": {
      "get": {
        "tags": [
          "CampiAggiuntiviRichieste"
        ],
        "summary": "Restituisce la lista di tutti i CampiAggiuntiviRichieste asssociati ad una specifica Richiesta",
        "operationId": "CampiAggiuntiviRichieste_GetByIdRichiesta",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "idRichiesta",
            "in": "path",
            "description": "Identificativo univoco di una Richiesta",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization header",
            "in": "header",
            "description": "Token di accesso restituito dall'endpoint /Token (grant_type:password,username:{Login},password:{PasswordCRIPTATA} ; DEVE essere aggiunto all'header con lo schema Bearer. Es. : \"bearer {token}\"",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/CampiAggiuntiviRichieste": {
      "post": {
        "tags": [
          "CampiAggiuntiviRichieste"
        ],
        "summary": "Creazione di un nuovo CampoAggiuntivo associato al nominativo",
        "operationId": "CampiAggiuntiviRichieste_PostCampiAggiuntiviRichieste",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Oggetto CampoAggiuntivo con i valori aggiornati",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CampiAggiuntiviRichieste"
            }
          },
          {
            "name": "Authorization header",
            "in": "header",
            "description": "Token di accesso restituito dall'endpoint /Token (grant_type:password,username:{Login},password:{PasswordCRIPTATA} ; DEVE essere aggiunto all'header con lo schema Bearer. Es. : \"bearer {token}\"",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CampiAggiuntiviRichiesteDTO"
            }
          }
        }
      }
    },
    "/Diritti/GetAllByRuolo/{CodRuolo}": {
      "get": {
        "tags": [
          "Diritti"
        ],
        "operationId": "Diritti_GetAllXGrid",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "CodRuolo",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization header",
            "in": "header",
            "description": "Token di accesso restituito dall'endpoint /Token (grant_type:password,username:{Login},password:{PasswordCRIPTATA} ; DEVE essere aggiunto all'header con lo schema Bearer. Es. : \"bearer {token}\"",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/Flussi/GetAllByIdRuolo/{codRuolo}": {
      "get": {
        "tags": [
          "Flussi"
        ],
        "summary": "Restituisce la lista di tutti i Flussi visibili da uno specifico Ruolo",
        "operationId": "Flussi_GetAllByIdRuolo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "codRuolo",
            "in": "path",
            "description": "Codice univoco del Ruolo",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization header",
            "in": "header",
            "description": "Token di accesso restituito dall'endpoint /Token (grant_type:password,username:{Login},password:{PasswordCRIPTATA} ; DEVE essere aggiunto all'header con lo schema Bearer. Es. : \"bearer {token}\"",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FlussiDTO"
            }
          }
        }
      }
    },
    "/Flussi/{id}": {
      "get": {
        "tags": [
          "Flussi"
        ],
        "summary": "Restituisce un Flusso utilizzando la chiave",
        "operationId": "Flussi_GetFlussi",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificativo Univoco del Flusso",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization header",
            "in": "header",
            "description": "Token di accesso restituito dall'endpoint /Token (grant_type:password,username:{Login},password:{PasswordCRIPTATA} ; DEVE essere aggiunto all'header con lo schema Bearer. Es. : \"bearer {token}\"",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FlussiDTO"
            }
          }
        }
      }
    },
    "/Flussi_Esiti/{idFlusso}/{IdFunzioneValutazione}/{codEsito}": {
      "get": {
        "tags": [
          "Flussi_Esiti"
        ],
        "summary": "Restituisce un Flussi_Esiti Nominativo utilizzando la chiave",
        "operationId": "Flussi_Esiti_GetFlussiEsiti",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "idFlusso",
            "in": "path",
            "description": "Identificativo Univoco del Flusso",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "IdFunzioneValutazione",
            "in": "path",
            "description": "Identificativo Univoco della Funzione di Valutazione",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "codEsito",
            "in": "path",
            "description": "Codice dell'Esito di Valutazione",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization header",
            "in": "header",
            "description": "Token di accesso restituito dall'endpoint /Token (grant_type:password,username:{Login},password:{PasswordCRIPTATA} ; DEVE essere aggiunto all'header con lo schema Bearer. Es. : \"bearer {token}\"",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Flussi_EsitiDTO"
            }
          }
        }
      }
    },
    "/Flussi_Esiti/GetEsitiByFlusso/{idFlusso}": {
      "get": {
        "tags": [
          "Flussi_Esiti"
        ],
        "summary": "Restituisce tutti gli Esiti Utilizzabili per un flusso tenendo conto della Funzione di Valutazione associata al",
        "operationId": "Flussi_Esiti_GetEsitiByFlusso",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "idFlusso",
            "in": "path",
            "description": "Identificativo Univoco del Flusso",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization header",
            "in": "header",
            "description": "Token di accesso restituito dall'endpoint /Token (grant_type:password,username:{Login},password:{PasswordCRIPTATA} ; DEVE essere aggiunto all'header con lo schema Bearer. Es. : \"bearer {token}\"",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Flussi_EsitiDTO"
            }
          }
        }
      }
    },
    "/Flussi_Esiti_Livelli/{idFlusso}/{IdFunzioneValutazione}/{codEsito}/{livello}": {
      "get": {
        "tags": [
          "Flussi_Esiti_Livelli"
        ],
        "summary": "Restituisce un Flussi_Esiti_Livelli utilizzando la chiave",
        "operationId": "Flussi_Esiti_Livelli_GetFlussi_Esiti_Livelli",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "idFlusso",
            "in": "path",
            "description": "Identificativo Univoco del Flusso",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "IdFunzioneValutazione",
            "in": "path",
            "description": "Identificativo Univoco della Funzione di Valutazione",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "codEsito",
            "in": "path",
            "description": "Codice dell'Esito di Valutazione",
            "required": true,
            "type": "string"
          },
          {
            "name": "livello",
            "in": "path",
            "description": "Livello",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization header",
            "in": "header",
            "description": "Token di accesso restituito dall'endpoint /Token (grant_type:password,username:{Login},password:{PasswordCRIPTATA} ; DEVE essere aggiunto all'header con lo schema Bearer. Es. : \"bearer {token}\"",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Flussi_Esiti_LivelliDTO"
            }
          }
        }
      }
    },
    "/Flussi_Esiti_Livelli/byFlussoFunzioneEsito/{idFlusso}/{IdFunzioneValutazione}/{codEsito}": {
      "get": {
        "tags": [
          "Flussi_Esiti_Livelli"
        ],
        "summary": "Restituisce tutti i livelli associati ad una chiave logica (Flusso, Funzione di valutazione e CodiceEsito",
        "operationId": "Flussi_Esiti_Livelli_GetbyFlussoReportEsito",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "idFlusso",
            "in": "path",
            "description": "Identificativo Univoco del Flusso",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "IdFunzioneValutazione",
            "in": "path",
            "description": "Identificativo Univoco della Funzione di Valutazione",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "codEsito",
            "in": "path",
            "description": "Codice dell'Esito di Valutazione",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization header",
            "in": "header",
            "description": "Token di accesso restituito dall'endpoint /Token (grant_type:password,username:{Login},password:{PasswordCRIPTATA} ; DEVE essere aggiunto all'header con lo schema Bearer. Es. : \"bearer {token}\"",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Flussi_Esiti_LivelliDTO"
            }
          }
        }
      }
    },
    "/Flussi_Esiti_Livelli_UtentiRuoli/{IdFlussi_Esiti_Livelli_UtentiRuoli}": {
      "get": {
        "tags": [
          "Flussi_Esiti_Livelli_UtentiRuoli"
        ],
        "summary": "Restituisce un Flussi_Esiti_Livelli_UtentiRuoli utilizzando la chiave",
        "operationId": "Flussi_Esiti_Livelli_UtentiRuoli_GetFlussi_Esiti_Livelli_UtentiRuoli",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "IdFlussi_Esiti_Livelli_UtentiRuoli",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization header",
            "in": "header",
            "description": "Token di accesso restituito dall'endpoint /Token (grant_type:password,username:{Login},password:{PasswordCRIPTATA} ; DEVE essere aggiunto all'header con lo schema Bearer. Es. : \"bearer {token}\"",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Flussi_Esiti_Livelli_UtentiRuoliDTO"
            }
          }
        }
      }
    },
    "/FunzioniValutazione": {
      "get": {
        "tags": [
          "FunzioniValutazione"
        ],
        "summary": "Restituisce tutte le Funzioni di Valutazione",
        "operationId": "FunzioniValutazione_GetFunzioniValutazione",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FunzioniValutazioneDTO"
              }
            }
          }
        }
      }
    },
    "/FunzioniValutazione/{id}": {
      "get": {
        "tags": [
          "FunzioniValutazione"
        ],
        "summary": "Retituisce una specifica funzione di Valutazione",
        "operationId": "FunzioniValutazione_GetFunzioniValutazione",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificativo Univoco della Funzione di Valutazione",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization header",
            "in": "header",
            "description": "Token di accesso restituito dall'endpoint /Token (grant_type:password,username:{Login},password:{PasswordCRIPTATA} ; DEVE essere aggiunto all'header con lo schema Bearer. Es. : \"bearer {token}\"",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FunzioniValutazioneDTO"
            }
          }
        }
      }
    },
    "/FunzioniValutazione_Esiti/{id}/{codEsito}": {
      "get": {
        "tags": [
          "FunzioniValutazione_Esiti"
        ],
        "summary": "Restituisce un FunzioniValutazione_EsitiDTO utilizzando la chiave",
        "operationId": "FunzioniValutazione_Esiti_GetFunzioniValutazione_Esiti",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id della funzione di Valutazione",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "codEsito",
            "in": "path",
            "description": "Codice dell'Esito di Valutazione",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization header",
            "in": "header",
            "description": "Token di accesso restituito dall'endpoint /Token (grant_type:password,username:{Login},password:{PasswordCRIPTATA} ; DEVE essere aggiunto all'header con lo schema Bearer. Es. : \"bearer {token}\"",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FunzioniValutazione_EsitiDTO"
            }
          }
        }
      }
    },
    "/FunzioniValutazione_Esiti/byFunzione/{IdFunzioneValutazione}": {
      "get": {
        "tags": [
          "FunzioniValutazione_Esiti"
        ],
        "summary": "Restituisce tutti gli esiti associati alla Funzione di Valutazione",
        "operationId": "FunzioniValutazione_Esiti_GetbyFunzione",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "IdFunzioneValutazione",
            "in": "path",
            "description": "Identificativo Univoco della Funzione di Valutazione",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization header",
            "in": "header",
            "description": "Token di accesso restituito dall'endpoint /Token (grant_type:password,username:{Login},password:{PasswordCRIPTATA} ; DEVE essere aggiunto all'header con lo schema Bearer. Es. : \"bearer {token}\"",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FunzioniValutazione_EsitiDTO"
            }
          }
        }
      }
    },
    "/MailTemplate/PossibiliParametri": {
      "get": {
        "tags": [
          "MailTemplate"
        ],
        "summary": "Restituisce la lista dei Parametri utilizzabili all'interno dei MailTemplate",
        "operationId": "MailTemplate_GetPossibiliParametri",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/MailTemplate/Invia/{IdMailTemplate}/{IdRichiesta}/{IdUtenteTo}": {
      "post": {
        "tags": [
          "MailTemplate"
        ],
        "summary": "Invia un Mail Template sostituendo le informazioni della richiesta specificata all'utente specificato",
        "operationId": "MailTemplate_InviaEmail",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "IdMailTemplate",
            "in": "path",
            "description": "Identificativo univoco del MailTemplate",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "IdRichiesta",
            "in": "path",
            "description": "Identificativo univoco della Richiesta",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "IdUtenteTo",
            "in": "path",
            "description": "Identificativo univoco dell'Utente",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization header",
            "in": "header",
            "description": "Token di accesso restituito dall'endpoint /Token (grant_type:password,username:{Login},password:{PasswordCRIPTATA} ; DEVE essere aggiunto all'header con lo schema Bearer. Es. : \"bearer {token}\"",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/MailTemplate": {
      "get": {
        "tags": [
          "MailTemplate"
        ],
        "summary": "Restituisce tutti i MailTemplate",
        "operationId": "MailTemplate_GetMailTemplate",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MailTemplateDTO"
              }
            }
          }
        }
      }
    },
    "/MailTemplate/{id}": {
      "get": {
        "tags": [
          "MailTemplate"
        ],
        "summary": "Restituisce un MailTemplate utilizzando la chiave",
        "operationId": "MailTemplate_GetMailTemplate",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificativo Univoco dei MailTemplate",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization header",
            "in": "header",
            "description": "Token di accesso restituito dall'endpoint /Token (grant_type:password,username:{Login},password:{PasswordCRIPTATA} ; DEVE essere aggiunto all'header con lo schema Bearer. Es. : \"bearer {token}\"",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MailTemplateDTO"
            }
          }
        }
      }
    },
    "/Nominativi/Bulk/{Operation}": {
      "post": {
        "tags": [
          "Nominativi"
        ],
        "summary": "Creazione massiva di Nominativi passando una lista di oggetti Nominativo\r\n\r\nPensata per essere utilizzata con Servizi che creano le richieste per conto di utenti, senza necessariamente collegarsi con le credenziali dell'utente richiedente\r\n\r\nSe in Errore: Errore HTTP con messaggio di dettaglio dell'errore o degli Errori riscontrati\r\n\r\nSe tutto completato correttamente: HTTP OK e nessun messaggio",
        "operationId": "Nominativi_BulkOperation",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Operation",
            "in": "path",
            "description": "Operation: Operazione da effettuare; \r\n \r\n Possibili valori: \r\n - Add - Crea sempre un nuovo Nominativo\r\n - Merge: - Aggiorna un Nominativo a parità di CodiceNominativo, altrimenti lo crea",
            "required": true,
            "type": "string"
          },
          {
            "name": "params",
            "in": "body",
            "description": "Parametri:\r\n - NMatricola: NMatricola dell'utente che richiede la creazione dei Nominativi\r\n - NominativiList: Lista di oggetti Nominativo con eventuali campi aggiuntivi da creare (N.B. I seguenti campi sono calcolati e quindi possono essere ignorati: IdNominativo, C_DataCreazione, C_IdUtenteCreazione, C_DataLastUpdate, C_IdUtenteLastUpdate)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bulkParameters"
            }
          },
          {
            "name": "Authorization header",
            "in": "header",
            "description": "Token di accesso restituito dall'endpoint /Token (grant_type:password,username:{Login},password:{PasswordCRIPTATA} ; DEVE essere aggiunto all'header con lo schema Bearer. Es. : \"bearer {token}\"",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/Nominativi/{id}": {
      "get": {
        "tags": [
          "Nominativi"
        ],
        "summary": "Restituisce un Nominativo",
        "operationId": "Nominativi_GetNominativi",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificativo univoco del Nominativo",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "Authorization header",
            "in": "header",
            "description": "Token di accesso restituito dall'endpoint /Token (grant_type:password,username:{Login},password:{PasswordCRIPTATA} ; DEVE essere aggiunto all'header con lo schema Bearer. Es. : \"bearer {token}\"",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NominativiDTO"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Nominativi"
        ],
        "summary": "Aggiorna un Nominativi specificando la chiave iniziale da aggiornare",
        "operationId": "Nominativi_PutNominativi",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificativo univoco del Nominativo",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Oggetto Nominativi con i valori aggiornati",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Nominativi"
            }
          },
          {
            "name": "Authorization header",
            "in": "header",
            "description": "Token di accesso restituito dall'endpoint /Token (grant_type:password,username:{Login},password:{PasswordCRIPTATA} ; DEVE essere aggiunto all'header con lo schema Bearer. Es. : \"bearer {token}\"",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/Nominativi": {
      "post": {
        "tags": [
          "Nominativi"
        ],
        "summary": "Creazione di un nuovo Flussi_Esiti_Livelli",
        "operationId": "Nominativi_PostNominativi",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Oggetto Nominativi con i valori aggiornati",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Nominativi"
            }
          },
          {
            "name": "Authorization header",
            "in": "header",
            "description": "Token di accesso restituito dall'endpoint /Token (grant_type:password,username:{Login},password:{PasswordCRIPTATA} ; DEVE essere aggiunto all'header con lo schema Bearer. Es. : \"bearer {token}\"",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NominativiDTO"
            }
          }
        }
      }
    },
    "/Providers": {
      "get": {
        "tags": [
          "Providers"
        ],
        "summary": "Restituisco la lista di tutti i Provider configurati",
        "operationId": "Providers_GetProviders",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProvidersDTO"
              }
            }
          }
        }
      }
    },
    "/Providers/{id}": {
      "get": {
        "tags": [
          "Providers"
        ],
        "summary": "Restituisce uno specifico Provider",
        "operationId": "Providers_GetProviders",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificativo Univoco del Provider",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization header",
            "in": "header",
            "description": "Token di accesso restituito dall'endpoint /Token (grant_type:password,username:{Login},password:{PasswordCRIPTATA} ; DEVE essere aggiunto all'header con lo schema Bearer. Es. : \"bearer {token}\"",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProvidersDTO"
            }
          }
        }
      }
    },
    "/Richieste/Ricerca/{modalita}": {
      "post": {
        "tags": [
          "Richieste"
        ],
        "summary": "Effettua la ricerca delle richieste restituendo la lista che corrisponde ai parametri passati in formato Datatable",
        "operationId": "Richieste_RicercaRichieste",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "modalita",
            "in": "path",
            "description": "Modalità di ricerca da utilizzare per considerare un solo subset di Richieste\r\n Possibili valori:\r\n - 0: Libera, Tutte le richieste\r\n - 1: MieRichieste, sole richieste effettuate dall'utente specificato nei parametri\r\n - 2: DaApprovare, sole richieste di cui io sono un Approvatore",
            "required": true,
            "type": "integer",
            "format": "int32",
            "enum": [
              0,
              1,
              2
            ]
          },
          {
            "name": "param",
            "in": "body",
            "description": "Parametri di ricerca\r\n \r\n Proprietà Obbligatorie:\r\n - IdUtente: Identificativo dell'Utente per cui si sta effettuando la richiesta\r\n - CodTipoRichiesta: Obbligatorio solo per Modalità Libera; Specifica quale Tipo di Richiesta ricercare\r\n - InArrivo: Possibili valori: 0 Richieste per cui sono un Approvatore al livello corrente di approvazione, 1 Richieste per cui sono o sarò un Approvatore, ma non sono ad un livello successivo al mio",
            "required": true,
            "schema": {
              "$ref": "#/definitions/paramRicerca"
            }
          },
          {
            "name": "Authorization header",
            "in": "header",
            "description": "Token di accesso restituito dall'endpoint /Token (grant_type:password,username:{Login},password:{PasswordCRIPTATA} ; DEVE essere aggiunto all'header con lo schema Bearer. Es. : \"bearer {token}\"",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/Richieste/AvanzaStato/{IdRichiesta}/{Livello}/{IdUtenteApprovatore}/{Azione}": {
      "post": {
        "tags": [
          "Richieste"
        ],
        "operationId": "Richieste_AvanzaStato",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "IdRichiesta",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Livello",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "IdUtenteApprovatore",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Azione",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Nota",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization header",
            "in": "header",
            "description": "Token di accesso restituito dall'endpoint /Token (grant_type:password,username:{Login},password:{PasswordCRIPTATA} ; DEVE essere aggiunto all'header con lo schema Bearer. Es. : \"bearer {token}\"",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/resultAvanzaStato"
            }
          }
        }
      }
    },
    "/Richieste/Create": {
      "post": {
        "tags": [
          "Richieste"
        ],
        "summary": "Creazione di una Richiesta passando il Nominativo associato e l'eventuale lista di campi aggiuntivi\r\n\r\nPensata per essere utilizzata con Servizi che creano le richieste per conto di utenti, senza necessariamente collegarsi con le credenziali dell'utente richiedente\r\n\r\nSe in Errore restituisce: Errore HTTP con messaggio di dettaglio dell'errore o degli Errori riscontrati\r\n\r\nSe tutto completato correttamente restituisce: HTTP OK e l'Oggetto Richiesta comprensivo di identificativo univoco\r\n\r\nLa creazione di una richiesta inizializza anche il processo di Approvazione",
        "operationId": "Richieste_Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "params",
            "in": "body",
            "description": "Parametri:\r\n - OperazioneNominativo: Operazione da effettuare con il Nominativo; Possibili valori: Add - Crea sempre un nuovo Nominativo; Merge: - Aggiorna un Nominativo a parità di CodiceNominativo, altrimenti lo crea\r\n - NMatricola: NMatricola dell'utente che richiede la creazione dei Nominativi\r\n - Nominativo: Oggetto di tipo Nominativo da associare alla richiesta con eventuali campi aggiuntivi da creare (N.B. I seguenti campi sono calcolati e quindi possono essere ignorati: IdNominativo, C_DataCreazione, C_IdUtenteCreazione, C_DataLastUpdate, C_IdUtenteLastUpdate)\r\n - Richiesta: Oggetto di tipo Richiesta da creare con eventuali campi Aggiuntivi \r\n \r\n N.B. Solo i seguenti campi dell'oggetto richiesta vengono presi in considerazione, gli altri sono calcolati:\r\n - CodTipoRichiesta\r\n - Importo\r\n - NoteRichiesta\r\n - CampiAggiuntivi",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createParameters"
            }
          },
          {
            "name": "Authorization header",
            "in": "header",
            "description": "Token di accesso restituito dall'endpoint /Token (grant_type:password,username:{Login},password:{PasswordCRIPTATA} ; DEVE essere aggiunto all'header con lo schema Bearer. Es. : \"bearer {token}\"",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/Richieste/{id}": {
      "get": {
        "tags": [
          "Richieste"
        ],
        "summary": "Restituisce una Richiesta utilizzando la chiave",
        "operationId": "Richieste_GetRichieste",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificativo Univoco della Richiesta",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization header",
            "in": "header",
            "description": "Token di accesso restituito dall'endpoint /Token (grant_type:password,username:{Login},password:{PasswordCRIPTATA} ; DEVE essere aggiunto all'header con lo schema Bearer. Es. : \"bearer {token}\"",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RichiesteDTO"
            }
          }
        }
      }
    },
    "/Richieste_StoricoApprovazione/{IdRichiesta}/{livello}/{IdUtenteApprovatore}": {
      "put": {
        "tags": [
          "Richieste_StoricoApprovazione"
        ],
        "summary": "Aggiorna un Richieste_StoricoApprovazione specificando la chiave iniziale da aggiornare",
        "operationId": "Richieste_StoricoApprovazione_PutRichiesteStoricoApprovazione",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "IdRichiesta",
            "in": "path",
            "description": "Identificativo Univoco della Richiesta",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "livello",
            "in": "path",
            "description": "Livello",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "IdUtenteApprovatore",
            "in": "path",
            "description": "Id univoco dell'utente approvatore per il livello",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Oggetto Richieste_StoricoApprovazione con i valori aggiornati",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Richieste_StoricoApprovazione"
            }
          },
          {
            "name": "Authorization header",
            "in": "header",
            "description": "Token di accesso restituito dall'endpoint /Token (grant_type:password,username:{Login},password:{PasswordCRIPTATA} ; DEVE essere aggiunto all'header con lo schema Bearer. Es. : \"bearer {token}\"",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/Richieste_StoricoApprovazione/ByIdRichiesta/{id}": {
      "get": {
        "tags": [
          "Richieste_StoricoApprovazione"
        ],
        "summary": "Restituisce la lista di oggetti Richieste_StoricoApprovazione per una specifica richiesta",
        "operationId": "Richieste_StoricoApprovazione_GetAllByIdRichiesta",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificativo Univoco della Richiesta",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization header",
            "in": "header",
            "description": "Token di accesso restituito dall'endpoint /Token (grant_type:password,username:{Login},password:{PasswordCRIPTATA} ; DEVE essere aggiunto all'header con lo schema Bearer. Es. : \"bearer {token}\"",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Richieste_StoricoApprovazioneDTO"
            }
          }
        }
      }
    },
    "/Ruoli": {
      "get": {
        "tags": [
          "Ruoli"
        ],
        "summary": "Restituisco la lista di tutti i Ruoli utilizzabili a sistema",
        "operationId": "Ruoli_GetRuoli",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RuoliDTO"
              }
            }
          }
        }
      }
    },
    "/Ruoli_TipiRichieste/GetAllByIdRuolo/{codRuolo}": {
      "get": {
        "tags": [
          "Ruoli_TipiRichieste"
        ],
        "summary": "Restituisce i Tipi di Richieste utlizzabili da un Ruolo",
        "operationId": "Ruoli_TipiRichieste_GetAllByIdRuolo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "codRuolo",
            "in": "path",
            "description": "Codice del Ruolo",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization header",
            "in": "header",
            "description": "Token di accesso restituito dall'endpoint /Token (grant_type:password,username:{Login},password:{PasswordCRIPTATA} ; DEVE essere aggiunto all'header con lo schema Bearer. Es. : \"bearer {token}\"",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Ruoli_TipiRichiesteDTO"
            }
          }
        }
      }
    },
    "/TipiCampiAggiuntivi/{id}/{gruppo}": {
      "get": {
        "tags": [
          "TipiCampiAggiuntivi"
        ],
        "summary": "Restituisce l'oggetto TipiCampiAggiuntivi per chiave",
        "operationId": "TipiCampiAggiuntivi_GetTipiCampiAggiuntivi",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Codice del Campo Aggiuntivo",
            "required": true,
            "type": "string"
          },
          {
            "name": "gruppo",
            "in": "path",
            "description": "Gruppo del campo",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization header",
            "in": "header",
            "description": "Token di accesso restituito dall'endpoint /Token (grant_type:password,username:{Login},password:{PasswordCRIPTATA} ; DEVE essere aggiunto all'header con lo schema Bearer. Es. : \"bearer {token}\"",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TipiCampiAggiuntiviDTO"
            }
          }
        }
      }
    },
    "/TipiCampiAggiuntivi/datiComboSql/{CodiceCampo}/{GruppoCampo}": {
      "get": {
        "tags": [
          "TipiCampiAggiuntivi"
        ],
        "summary": "Restituisce i valori utilizzabili per Campo aggiuntivo specificato\r\n\r\nN.B. da utilizzare solo per campo aggiuntivi con proprietà Combo_SQL valorizzata",
        "operationId": "TipiCampiAggiuntivi_GetDatiComboSql",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "CodiceCampo",
            "in": "path",
            "description": "Codice del Campo Aggiuntivo",
            "required": true,
            "type": "string"
          },
          {
            "name": "GruppoCampo",
            "in": "path",
            "description": "Gruppo del campo",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization header",
            "in": "header",
            "description": "Token di accesso restituito dall'endpoint /Token (grant_type:password,username:{Login},password:{PasswordCRIPTATA} ; DEVE essere aggiunto all'header con lo schema Bearer. Es. : \"bearer {token}\"",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/TipiCampiAggiuntivi/byGruppo/{Gruppo}": {
      "get": {
        "tags": [
          "TipiCampiAggiuntivi"
        ],
        "summary": "Restituisce tutti i campo Aggiuntivi associati ad un Gruppo",
        "operationId": "TipiCampiAggiuntivi_GetByGruppo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Gruppo",
            "in": "path",
            "description": "Gruppo dei campi \r\n \r\n N.B. Possibili valori:\r\n - Nominativo, per ottenere i CampiAggiuntivi per i Nominativi\r\n - Richiesta_CODTIPORICHIESTA, per ottenere i CampiAggiuntivi per le richieste di un Cod Tipi Richiesta Specifico",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization header",
            "in": "header",
            "description": "Token di accesso restituito dall'endpoint /Token (grant_type:password,username:{Login},password:{PasswordCRIPTATA} ; DEVE essere aggiunto all'header con lo schema Bearer. Es. : \"bearer {token}\"",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/TipiReport/{providerId}/{codReport}": {
      "get": {
        "tags": [
          "TipiReport"
        ],
        "summary": "Restituisce uno specifico Tipo Report per un provider",
        "operationId": "TipiReport_GetTipiReport",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "providerId",
            "in": "path",
            "description": "Identificativo univoco del provider",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "codReport",
            "in": "path",
            "description": "Codice del Report",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization header",
            "in": "header",
            "description": "Token di accesso restituito dall'endpoint /Token (grant_type:password,username:{Login},password:{PasswordCRIPTATA} ; DEVE essere aggiunto all'header con lo schema Bearer. Es. : \"bearer {token}\"",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TipiReportDTO"
            }
          }
        }
      }
    },
    "/TipiReport": {
      "get": {
        "tags": [
          "TipiReport"
        ],
        "summary": "Restituisco la lista di tutti i TipiReport configurati",
        "operationId": "TipiReport_GetTipiReport",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TipiReportDTO"
              }
            }
          }
        }
      }
    },
    "/TipiReport_Esiti/{providerId}/{codReport}/{codEsito}": {
      "get": {
        "tags": [
          "TipiReport_Esiti"
        ],
        "summary": "Ottiene uno specifico oggetto TipiReport_Esiti specificando la chiave",
        "operationId": "TipiReport_Esiti_GetTipiReport_Esiti",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "providerId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "codReport",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "codEsito",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization header",
            "in": "header",
            "description": "Token di accesso restituito dall'endpoint /Token (grant_type:password,username:{Login},password:{PasswordCRIPTATA} ; DEVE essere aggiunto all'header con lo schema Bearer. Es. : \"bearer {token}\"",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TipiReport_EsitiDTO"
            }
          }
        }
      }
    },
    "/TipiReport_Esiti": {
      "get": {
        "tags": [
          "TipiReport_Esiti"
        ],
        "summary": "Ottiene la lista di tutti gli esiti associati ai TipiReport di tutti i provider",
        "operationId": "TipiReport_Esiti_GetTipiReport_Esiti",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TipiReport_EsitiDTO"
              }
            }
          }
        }
      }
    },
    "/TipiRichieste/{id}": {
      "get": {
        "tags": [
          "TipiRichieste"
        ],
        "summary": "Restituisce uno specifico Tipo Richiesta per chiave",
        "operationId": "TipiRichieste_GetTipiRichieste",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "CodTipoRichiesta",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization header",
            "in": "header",
            "description": "Token di accesso restituito dall'endpoint /Token (grant_type:password,username:{Login},password:{PasswordCRIPTATA} ; DEVE essere aggiunto all'header con lo schema Bearer. Es. : \"bearer {token}\"",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TipiRichiesteDTO"
            }
          }
        }
      }
    },
    "/Utenti/byLogin/{login}": {
      "get": {
        "tags": [
          "Utenti"
        ],
        "summary": "Ottiene l'oggetto Utente per la login specificata",
        "operationId": "Utenti_GetUtentebyLogin",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "login",
            "in": "path",
            "description": "Login dell'utente",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization header",
            "in": "header",
            "description": "Token di accesso restituito dall'endpoint /Token (grant_type:password,username:{Login},password:{PasswordCRIPTATA} ; DEVE essere aggiunto all'header con lo schema Bearer. Es. : \"bearer {token}\"",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UtentiDTO"
            }
          }
        }
      }
    },
    "/Utenti/{id}": {
      "get": {
        "tags": [
          "Utenti"
        ],
        "summary": "Ottiene l'oggetto Utente per la specifica chiave",
        "operationId": "Utenti_GetUtenti",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificativo univoco dell'utente",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "Authorization header",
            "in": "header",
            "description": "Token di accesso restituito dall'endpoint /Token (grant_type:password,username:{Login},password:{PasswordCRIPTATA} ; DEVE essere aggiunto all'header con lo schema Bearer. Es. : \"bearer {token}\"",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UtentiDTO"
            }
          }
        }
      }
    },
    "/Utenti_LivelliSuperiori/GetByIdUtente/{idUtente}": {
      "get": {
        "tags": [
          "Utenti_LivelliSuperiori"
        ],
        "summary": "Restituisce gli utenti di livello superiore associati ad uno specifico utente",
        "operationId": "Utenti_LivelliSuperiori_GetByIdUtente",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "idUtente",
            "in": "path",
            "description": "Identificativo univoco dell'utente",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization header",
            "in": "header",
            "description": "Token di accesso restituito dall'endpoint /Token (grant_type:password,username:{Login},password:{PasswordCRIPTATA} ; DEVE essere aggiunto all'header con lo schema Bearer. Es. : \"bearer {token}\"",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UtentiDTO"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CampiAggiuntiviNominativiDTO": {
      "type": "object",
      "properties": {
        "IdNominativo": {
          "format": "int32",
          "type": "integer"
        },
        "CodiceCampo": {
          "type": "string"
        },
        "GruppoCampo": {
          "type": "string"
        },
        "ValoreCampo": {
          "type": "string"
        },
        "BinarioCampo": {
          "format": "byte",
          "type": "string"
        },
        "ValoreHTML": {
          "type": "string"
        }
      }
    },
    "CampiAggiuntiviNominativi": {
      "type": "object",
      "properties": {
        "IdNominativo": {
          "format": "int32",
          "type": "integer"
        },
        "CodiceCampo": {
          "type": "string"
        },
        "GruppoCampo": {
          "type": "string"
        },
        "ValoreCampo": {
          "type": "string"
        },
        "BinarioCampo": {
          "format": "byte",
          "type": "string"
        },
        "ValoreHTML": {
          "type": "string"
        },
        "Nominativi": {
          "$ref": "#/definitions/Nominativi"
        },
        "TipiCampiAggiuntivi": {
          "$ref": "#/definitions/TipiCampiAggiuntivi"
        }
      }
    },
    "Nominativi": {
      "type": "object",
      "properties": {
        "IdNominativo": {
          "format": "int32",
          "type": "integer"
        },
        "CodiceNominativo": {
          "type": "string"
        },
        "Tipo": {
          "format": "int32",
          "type": "integer"
        },
        "RagioneSociale": {
          "type": "string"
        },
        "PIVAoCF": {
          "type": "string"
        },
        "C_DataCreazione": {
          "format": "date-time",
          "type": "string"
        },
        "C_IdUtenteCreazione": {
          "format": "int32",
          "type": "integer"
        },
        "C_DataLastUpdate": {
          "format": "date-time",
          "type": "string"
        },
        "C_IdUtenteLastUpdate": {
          "format": "int32",
          "type": "integer"
        },
        "CampiAggiuntiviNominativi": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CampiAggiuntiviNominativi"
          }
        },
        "Richieste": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Richieste"
          }
        }
      }
    },
    "TipiCampiAggiuntivi": {
      "type": "object",
      "properties": {
        "CodiceCampo": {
          "type": "string"
        },
        "Descrizione": {
          "type": "string"
        },
        "Tipo": {
          "type": "string"
        },
        "Combo_SQL": {
          "type": "string"
        },
        "Ordine": {
          "format": "int32",
          "type": "integer"
        },
        "Obbligatorio": {
          "type": "boolean"
        },
        "Gruppo": {
          "type": "string"
        },
        "CampiAggiuntiviNominativi": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CampiAggiuntiviNominativi"
          }
        },
        "CampiAggiuntiviRichieste": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CampiAggiuntiviRichieste"
          }
        }
      }
    },
    "Richieste": {
      "type": "object",
      "properties": {
        "IdRichiesta": {
          "format": "int32",
          "type": "integer"
        },
        "IdUtenteRichiedente": {
          "format": "int32",
          "type": "integer"
        },
        "IdNominativo": {
          "format": "int32",
          "type": "integer"
        },
        "Importo": {
          "format": "double",
          "type": "number"
        },
        "NoteRichiesta": {
          "type": "string"
        },
        "C_DataCreazione": {
          "format": "date-time",
          "type": "string"
        },
        "C_IdUtenteCreazione": {
          "format": "int32",
          "type": "integer"
        },
        "C_DataLastUpdate": {
          "format": "date-time",
          "type": "string"
        },
        "C_IdUtenteLastUpdate": {
          "format": "int32",
          "type": "integer"
        },
        "IdFlussoApprovazione": {
          "format": "int32",
          "type": "integer"
        },
        "ProviderId": {
          "format": "int32",
          "type": "integer"
        },
        "CodReportRichiesto": {
          "type": "string"
        },
        "DataAcquistoReport": {
          "format": "date-time",
          "type": "string"
        },
        "StatoReport": {
          "format": "int32",
          "type": "integer"
        },
        "LinkReport": {
          "type": "string"
        },
        "DataGenerazioneReport": {
          "format": "date-time",
          "type": "string"
        },
        "CodEsitoReport": {
          "type": "string"
        },
        "LivelloCorrente": {
          "format": "int32",
          "type": "integer"
        },
        "flgApprovazioneFinale": {
          "type": "boolean"
        },
        "EsportatoERP": {
          "type": "boolean"
        },
        "CodTipoRichiesta": {
          "type": "string"
        },
        "CodEsitoValutazione": {
          "type": "string"
        },
        "CampiAggiuntiviRichieste": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CampiAggiuntiviRichieste"
          }
        },
        "Nominativi": {
          "$ref": "#/definitions/Nominativi"
        },
        "Richieste_StoricoApprovazione": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Richieste_StoricoApprovazione"
          }
        },
        "TipiRichieste": {
          "$ref": "#/definitions/TipiRichieste"
        }
      }
    },
    "CampiAggiuntiviRichieste": {
      "type": "object",
      "properties": {
        "IdRichiesta": {
          "format": "int32",
          "type": "integer"
        },
        "CodiceCampo": {
          "type": "string"
        },
        "GruppoCampo": {
          "type": "string"
        },
        "ValoreCampo": {
          "type": "string"
        },
        "BinarioCampo": {
          "format": "byte",
          "type": "string"
        },
        "ValoreHTML": {
          "type": "string"
        },
        "Richieste": {
          "$ref": "#/definitions/Richieste"
        },
        "TipiCampiAggiuntivi": {
          "$ref": "#/definitions/TipiCampiAggiuntivi"
        }
      }
    },
    "Richieste_StoricoApprovazione": {
      "type": "object",
      "properties": {
        "IdRichiesta": {
          "format": "int32",
          "type": "integer"
        },
        "C_DataInserimento": {
          "format": "date-time",
          "type": "string"
        },
        "Livello": {
          "format": "int32",
          "type": "integer"
        },
        "IdUtenteApprovatore": {
          "format": "double",
          "type": "number"
        },
        "flgApprovazione": {
          "type": "boolean"
        },
        "DataCambioFlgApprovazione": {
          "format": "date-time",
          "type": "string"
        },
        "NotaDaApprovatore": {
          "type": "string"
        },
        "NotificaInviata": {
          "type": "boolean"
        },
        "Richieste": {
          "$ref": "#/definitions/Richieste"
        },
        "Utenti": {
          "$ref": "#/definitions/Utenti"
        }
      }
    },
    "TipiRichieste": {
      "type": "object",
      "properties": {
        "CodTipoRichiesta": {
          "type": "string"
        },
        "Descrizione": {
          "type": "string"
        },
        "flgAbilitato": {
          "type": "boolean"
        },
        "Flussi": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Flussi"
          }
        },
        "Richieste": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Richieste"
          }
        },
        "Ruoli_TipiRichieste": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Ruoli_TipiRichieste"
          }
        },
        "Utenti_LivelliSuperiori": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Utenti_LivelliSuperiori"
          }
        }
      }
    },
    "Utenti": {
      "type": "object",
      "properties": {
        "IdUtente": {
          "format": "double",
          "type": "number"
        },
        "nome": {
          "type": "string"
        },
        "cognome": {
          "type": "string"
        },
        "login": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "nTelefonico": {
          "type": "string"
        },
        "nFax": {
          "type": "string"
        },
        "lingua": {
          "type": "string"
        },
        "WindowsIdentity": {
          "type": "string"
        },
        "CodRuolo": {
          "type": "string"
        },
        "nMatricola": {
          "type": "string"
        },
        "UtenteSistema": {
          "format": "int32",
          "type": "integer"
        },
        "Attivo": {
          "type": "boolean"
        },
        "Flussi_Esiti_Livelli_UtentiRuoli": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Flussi_Esiti_Livelli_UtentiRuoli"
          }
        },
        "Richieste_StoricoApprovazione": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Richieste_StoricoApprovazione"
          }
        },
        "Utenti_LivelliSuperiori": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Utenti_LivelliSuperiori"
          }
        },
        "Utenti_LivelliSuperiori1": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Utenti_LivelliSuperiori"
          }
        },
        "Ruoli": {
          "$ref": "#/definitions/Ruoli"
        }
      }
    },
    "Flussi": {
      "type": "object",
      "properties": {
        "IdFlusso": {
          "format": "int32",
          "type": "integer"
        },
        "Nome": {
          "type": "string"
        },
        "Descrizione": {
          "type": "string"
        },
        "ImportoDa": {
          "format": "double",
          "type": "number"
        },
        "ImportoA": {
          "format": "double",
          "type": "number"
        },
        "ProviderId": {
          "format": "int32",
          "type": "integer"
        },
        "CodReport": {
          "type": "string"
        },
        "MaxGGAnzianitaReport": {
          "format": "int32",
          "type": "integer"
        },
        "AcquistaReportSeAssente": {
          "type": "boolean"
        },
        "TipoNominativo": {
          "format": "int32",
          "type": "integer"
        },
        "flgAbilitato": {
          "type": "boolean"
        },
        "CodTipoRichiesta": {
          "type": "string"
        },
        "IdFunzioneValutazione": {
          "format": "int32",
          "type": "integer"
        },
        "Flussi_Esiti": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Flussi_Esiti"
          }
        },
        "FunzioniValutazione": {
          "$ref": "#/definitions/FunzioniValutazione"
        },
        "Providers": {
          "$ref": "#/definitions/Providers"
        },
        "TipiReport": {
          "$ref": "#/definitions/TipiReport"
        },
        "TipiRichieste": {
          "$ref": "#/definitions/TipiRichieste"
        }
      }
    },
    "Ruoli_TipiRichieste": {
      "type": "object",
      "properties": {
        "IdRuoli_TipiRichieste": {
          "format": "int32",
          "type": "integer"
        },
        "CodRuolo": {
          "type": "string"
        },
        "CodTipoRichiesta": {
          "type": "string"
        },
        "TipiRichieste": {
          "$ref": "#/definitions/TipiRichieste"
        },
        "Ruoli": {
          "$ref": "#/definitions/Ruoli"
        }
      }
    },
    "Utenti_LivelliSuperiori": {
      "type": "object",
      "properties": {
        "IdUtenti_LivelliSuperiori": {
          "format": "int32",
          "type": "integer"
        },
        "IdUtente": {
          "format": "double",
          "type": "number"
        },
        "CodTipoRichiesta": {
          "type": "string"
        },
        "IdUtentePadre": {
          "format": "double",
          "type": "number"
        },
        "TipiRichieste": {
          "$ref": "#/definitions/TipiRichieste"
        },
        "UtentePadre": {
          "$ref": "#/definitions/Utenti"
        },
        "Utente": {
          "$ref": "#/definitions/Utenti"
        }
      }
    },
    "Flussi_Esiti_Livelli_UtentiRuoli": {
      "type": "object",
      "properties": {
        "IdFlussi_Esiti_Livelli_UtentiRuoli": {
          "format": "int32",
          "type": "integer"
        },
        "IdFlusso": {
          "format": "int32",
          "type": "integer"
        },
        "IdFunzioneValutazione": {
          "format": "int32",
          "type": "integer"
        },
        "CodEsito": {
          "type": "string"
        },
        "Livello": {
          "format": "int32",
          "type": "integer"
        },
        "IdUtente": {
          "format": "double",
          "type": "number"
        },
        "CodRuolo": {
          "type": "string"
        },
        "Flussi_Esiti_Livelli": {
          "$ref": "#/definitions/Flussi_Esiti_Livelli"
        },
        "Utenti": {
          "$ref": "#/definitions/Utenti"
        },
        "Ruoli": {
          "$ref": "#/definitions/Ruoli"
        }
      }
    },
    "Ruoli": {
      "type": "object",
      "properties": {
        "CodRuolo": {
          "type": "string"
        },
        "Descrizione": {
          "type": "string"
        },
        "Attivo": {
          "type": "boolean"
        },
        "Flussi_Esiti_Livelli_UtentiRuoli": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Flussi_Esiti_Livelli_UtentiRuoli"
          }
        },
        "Ruoli_Diritti": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Ruoli_Diritti"
          }
        },
        "Ruoli_TipiRichieste": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Ruoli_TipiRichieste"
          }
        },
        "Utenti": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Utenti"
          }
        }
      }
    },
    "Flussi_Esiti": {
      "type": "object",
      "properties": {
        "IdFlusso": {
          "format": "int32",
          "type": "integer"
        },
        "IdFunzioneValutazione": {
          "format": "int32",
          "type": "integer"
        },
        "CodEsito": {
          "type": "string"
        },
        "AutoApprova": {
          "type": "boolean"
        },
        "Flussi": {
          "$ref": "#/definitions/Flussi"
        },
        "Flussi_Esiti_Livelli": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Flussi_Esiti_Livelli"
          }
        }
      }
    },
    "FunzioniValutazione": {
      "type": "object",
      "properties": {
        "IdFunzioneValutazione": {
          "format": "int32",
          "type": "integer"
        },
        "Nome": {
          "type": "string"
        },
        "Descrizione": {
          "type": "string"
        },
        "NomeStored": {
          "type": "string"
        },
        "flgAbilitato": {
          "type": "boolean"
        },
        "Flussi": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Flussi"
          }
        },
        "FunzioniValutazione_Esiti": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FunzioniValutazione_Esiti"
          }
        }
      }
    },
    "Providers": {
      "type": "object",
      "properties": {
        "ProviderId": {
          "format": "int32",
          "type": "integer"
        },
        "Descrizione": {
          "type": "string"
        },
        "flgAbilitato": {
          "type": "boolean"
        },
        "Flussi": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Flussi"
          }
        },
        "TipiReport": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TipiReport"
          }
        }
      }
    },
    "TipiReport": {
      "type": "object",
      "properties": {
        "ProviderId": {
          "format": "int32",
          "type": "integer"
        },
        "CodReport": {
          "type": "string"
        },
        "Descrizione": {
          "type": "string"
        },
        "flgAbilitato": {
          "type": "boolean"
        },
        "Flussi": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Flussi"
          }
        },
        "Providers": {
          "$ref": "#/definitions/Providers"
        },
        "TipiReport_Esiti": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TipiReport_Esiti"
          }
        }
      }
    },
    "Flussi_Esiti_Livelli": {
      "type": "object",
      "properties": {
        "IdFlusso": {
          "format": "int32",
          "type": "integer"
        },
        "IdFunzioneValutazione": {
          "format": "int32",
          "type": "integer"
        },
        "CodEsito": {
          "type": "string"
        },
        "Livello": {
          "format": "int32",
          "type": "integer"
        },
        "AbilitaStoricoRichieste": {
          "type": "boolean"
        },
        "Flussi_Esiti": {
          "$ref": "#/definitions/Flussi_Esiti"
        },
        "Flussi_Esiti_Livelli_UtentiRuoli": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Flussi_Esiti_Livelli_UtentiRuoli"
          }
        }
      }
    },
    "Ruoli_Diritti": {
      "type": "object",
      "properties": {
        "IdRuoloDiritto": {
          "format": "int32",
          "type": "integer"
        },
        "CodRuolo": {
          "type": "string"
        },
        "CodDiritto": {
          "type": "string"
        },
        "Diritti": {
          "$ref": "#/definitions/Diritti"
        },
        "Ruoli": {
          "$ref": "#/definitions/Ruoli"
        }
      }
    },
    "FunzioniValutazione_Esiti": {
      "type": "object",
      "properties": {
        "IdFunzioneValutazione": {
          "format": "int32",
          "type": "integer"
        },
        "CodEsito": {
          "type": "string"
        },
        "Descrizione": {
          "type": "string"
        },
        "flgAbilitato": {
          "type": "boolean"
        },
        "FunzioniValutazione": {
          "$ref": "#/definitions/FunzioniValutazione"
        }
      }
    },
    "TipiReport_Esiti": {
      "type": "object",
      "properties": {
        "ProviderId": {
          "format": "int32",
          "type": "integer"
        },
        "CodReport": {
          "type": "string"
        },
        "CodEsito": {
          "type": "string"
        },
        "Descrizione": {
          "type": "string"
        },
        "TipiReport": {
          "$ref": "#/definitions/TipiReport"
        }
      }
    },
    "Diritti": {
      "type": "object",
      "properties": {
        "CodDiritto": {
          "type": "string"
        },
        "Descrizione": {
          "type": "string"
        },
        "Gruppo": {
          "type": "string"
        },
        "Abilitazione": {
          "format": "int32",
          "type": "integer"
        },
        "Ruoli_Diritti": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Ruoli_Diritti"
          }
        }
      }
    },
    "CampiAggiuntiviRichiesteDTO": {
      "type": "object",
      "properties": {
        "IdRichiesta": {
          "format": "int32",
          "type": "integer"
        },
        "CodiceCampo": {
          "type": "string"
        },
        "GruppoCampo": {
          "type": "string"
        },
        "ValoreCampo": {
          "type": "string"
        },
        "BinarioCampo": {
          "format": "byte",
          "type": "string"
        },
        "ValoreHTML": {
          "type": "string"
        }
      }
    },
    "FlussiDTO": {
      "type": "object",
      "properties": {
        "IdFlusso": {
          "format": "int32",
          "type": "integer"
        },
        "Nome": {
          "type": "string"
        },
        "Descrizione": {
          "type": "string"
        },
        "ImportoDa": {
          "format": "double",
          "type": "number"
        },
        "ImportoA": {
          "format": "double",
          "type": "number"
        },
        "ProviderId": {
          "format": "int32",
          "type": "integer"
        },
        "CodReport": {
          "type": "string"
        },
        "MaxGGAnzianitaReport": {
          "format": "int32",
          "type": "integer"
        },
        "AcquistaReportSeAssente": {
          "type": "boolean"
        },
        "TipoNominativo": {
          "format": "int32",
          "type": "integer"
        },
        "flgAbilitato": {
          "type": "boolean"
        },
        "CodTipoRichiesta": {
          "type": "string"
        },
        "IdFunzioneValutazione": {
          "format": "int32",
          "type": "integer"
        },
        "ProviderDesc": {
          "type": "string"
        },
        "ReportDesc": {
          "type": "string"
        },
        "TipoNominativoDesc": {
          "type": "string",
          "readOnly": true
        },
        "TipoRichiestaDesc": {
          "type": "string"
        },
        "FunzioneValutazioneNome": {
          "type": "string"
        }
      }
    },
    "Flussi_EsitiDTO": {
      "type": "object",
      "properties": {
        "IdFlusso": {
          "format": "int32",
          "type": "integer"
        },
        "IdFunzioneValutazione": {
          "format": "int32",
          "type": "integer"
        },
        "CodEsito": {
          "type": "string"
        },
        "AutoApprova": {
          "type": "boolean"
        },
        "NLivelli": {
          "format": "int32",
          "type": "integer"
        },
        "DescrizioneEsito": {
          "type": "string"
        }
      }
    },
    "Flussi_Esiti_LivelliDTO": {
      "type": "object",
      "properties": {
        "IdFlusso": {
          "format": "int32",
          "type": "integer"
        },
        "IdFunzioneValutazione": {
          "format": "int32",
          "type": "integer"
        },
        "CodEsito": {
          "type": "string"
        },
        "Livello": {
          "format": "int32",
          "type": "integer"
        },
        "AbilitaStoricoRichieste": {
          "type": "boolean"
        },
        "NUtentiRuoli": {
          "format": "int32",
          "type": "integer"
        },
        "UtentiRuoliLst": {
          "type": "string"
        }
      }
    },
    "Flussi_Esiti_Livelli_UtentiRuoliDTO": {
      "type": "object",
      "properties": {
        "IdFlussi_Esiti_Livelli_UtentiRuoli": {
          "format": "int32",
          "type": "integer"
        },
        "IdFlusso": {
          "format": "int32",
          "type": "integer"
        },
        "IdFunzioneValutazione": {
          "format": "int32",
          "type": "integer"
        },
        "CodEsito": {
          "type": "string"
        },
        "Livello": {
          "format": "int32",
          "type": "integer"
        },
        "IdUtente": {
          "format": "double",
          "type": "number"
        },
        "CodRuolo": {
          "type": "string"
        },
        "DescrizioneUtenteRuolo": {
          "type": "string"
        }
      }
    },
    "FunzioniValutazioneDTO": {
      "type": "object",
      "properties": {
        "IdFunzioneValutazione": {
          "format": "int32",
          "type": "integer"
        },
        "Nome": {
          "type": "string"
        },
        "Descrizione": {
          "type": "string"
        },
        "NomeStored": {
          "type": "string"
        },
        "flgAbilitato": {
          "type": "boolean"
        }
      }
    },
    "FunzioniValutazione_EsitiDTO": {
      "type": "object",
      "properties": {
        "IdFunzioneValutazione": {
          "format": "int32",
          "type": "integer"
        },
        "CodEsito": {
          "type": "string"
        },
        "Descrizione": {
          "type": "string"
        },
        "flgAbilitato": {
          "type": "boolean"
        },
        "FunzioneValutazioneDesc": {
          "type": "string"
        }
      }
    },
    "MailTemplateDTO": {
      "type": "object",
      "properties": {
        "IdMailTemplate": {
          "format": "int32",
          "type": "integer"
        },
        "Descrizione": {
          "type": "string"
        },
        "MailTo": {
          "type": "string"
        },
        "MailCC": {
          "type": "string"
        },
        "MailSubject": {
          "type": "string"
        },
        "MailBody": {
          "type": "string"
        }
      }
    },
    "bulkParameters": {
      "type": "object",
      "properties": {
        "nMatricola": {
          "type": "string"
        },
        "NominativiList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NominativiDTO"
          }
        }
      }
    },
    "NominativiDTO": {
      "type": "object",
      "properties": {
        "IdNominativo": {
          "format": "int32",
          "type": "integer"
        },
        "CodiceNominativo": {
          "type": "string"
        },
        "Tipo": {
          "format": "int32",
          "type": "integer"
        },
        "RagioneSociale": {
          "type": "string"
        },
        "C_DataCreazione": {
          "format": "date-time",
          "type": "string"
        },
        "C_IdUtenteCreazione": {
          "format": "int32",
          "type": "integer"
        },
        "C_DataLastUpdate": {
          "format": "date-time",
          "type": "string"
        },
        "C_IdUtenteLastUpdate": {
          "format": "int32",
          "type": "integer"
        },
        "PIVAoCF": {
          "type": "string"
        },
        "CampiAggiuntivi": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CampiAggiuntiviNominativiDTO"
          }
        }
      }
    },
    "ProvidersDTO": {
      "type": "object",
      "properties": {
        "ProviderId": {
          "format": "int32",
          "type": "integer"
        },
        "Descrizione": {
          "type": "string"
        },
        "flgAbilitato": {
          "type": "boolean"
        }
      }
    },
    "paramRicerca": {
      "type": "object",
      "properties": {
        "IdUtente": {
          "format": "int32",
          "type": "integer"
        },
        "CodTipoRichiesta": {
          "type": "string"
        },
        "InArrivo": {
          "type": "boolean"
        },
        "IdUtenteRichiedente": {
          "format": "int32",
          "type": "integer"
        },
        "Nominativo": {
          "$ref": "#/definitions/paramNominativo"
        },
        "ImportoDa": {
          "format": "double",
          "type": "number"
        },
        "ImportoA": {
          "format": "double",
          "type": "number"
        },
        "DataCreazioneDa": {
          "format": "date-time",
          "type": "string"
        },
        "DataCreazioneA": {
          "format": "date-time",
          "type": "string"
        },
        "Approvata": {
          "type": "boolean"
        },
        "CampiAggiuntivi_Nominativo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/paramCampiAggiuntivi"
          }
        },
        "CampiAggiuntivi_Richiesta": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/paramCampiAggiuntivi"
          }
        }
      }
    },
    "paramNominativo": {
      "type": "object",
      "properties": {
        "CodiceNominativo": {
          "type": "string"
        },
        "Tipo": {
          "format": "int32",
          "enum": [
            0,
            1,
            100
          ],
          "type": "integer"
        },
        "RagioneSociale": {
          "type": "string"
        },
        "PIva": {
          "type": "string"
        }
      }
    },
    "paramCampiAggiuntivi": {
      "type": "object",
      "properties": {
        "CodiceCampo": {
          "type": "string"
        },
        "GruppoCampo": {
          "type": "string"
        },
        "Valore": {
          "type": "string"
        }
      }
    },
    "resultAvanzaStato": {
      "type": "object",
      "properties": {
        "dtoStorico": {
          "$ref": "#/definitions/Richieste_StoricoApprovazioneDTO"
        },
        "MexPerUI": {
          "type": "string"
        },
        "NotifyLevel": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Richieste_StoricoApprovazioneDTO": {
      "type": "object",
      "properties": {
        "IdRichiesta": {
          "format": "int32",
          "type": "integer"
        },
        "C_DataInserimento": {
          "format": "date-time",
          "type": "string"
        },
        "Livello": {
          "format": "int32",
          "type": "integer"
        },
        "IdUtenteApprovatore": {
          "format": "int32",
          "type": "integer"
        },
        "flgApprovazione": {
          "type": "boolean"
        },
        "DataCambioFlgApprovazione": {
          "format": "date-time",
          "type": "string"
        },
        "NotaDaApprovatore": {
          "type": "string"
        },
        "NotificaInviata": {
          "type": "boolean"
        }
      }
    },
    "createParameters": {
      "type": "object",
      "properties": {
        "nMatricola": {
          "type": "string"
        },
        "Nominativo": {
          "$ref": "#/definitions/NominativiDTO"
        },
        "OperazioneNominativo": {
          "type": "string"
        },
        "Richiesta": {
          "$ref": "#/definitions/RichiesteDTO"
        }
      }
    },
    "RichiesteDTO": {
      "type": "object",
      "properties": {
        "IdRichiesta": {
          "format": "int32",
          "type": "integer"
        },
        "IdUtenteRichiedente": {
          "format": "int32",
          "type": "integer"
        },
        "IdNominativo": {
          "format": "int32",
          "type": "integer"
        },
        "Importo": {
          "format": "double",
          "type": "number"
        },
        "NoteRichiesta": {
          "type": "string"
        },
        "C_DataCreazione": {
          "format": "date-time",
          "type": "string"
        },
        "C_IdUtenteCreazione": {
          "format": "int32",
          "type": "integer"
        },
        "C_DataLastUpdate": {
          "format": "date-time",
          "type": "string"
        },
        "C_IdUtenteLastUpdate": {
          "format": "int32",
          "type": "integer"
        },
        "IdFlussoApprovazione": {
          "format": "int32",
          "type": "integer"
        },
        "ProviderId": {
          "format": "int32",
          "type": "integer"
        },
        "CodReportRichiesto": {
          "type": "string"
        },
        "DataAcquistoReport": {
          "format": "date-time",
          "type": "string"
        },
        "StatoReport": {
          "format": "int32",
          "type": "integer"
        },
        "LinkReport": {
          "type": "string"
        },
        "DataGenerazioneReport": {
          "format": "date-time",
          "type": "string"
        },
        "CodEsitoReport": {
          "type": "string"
        },
        "LivelloCorrente": {
          "format": "int32",
          "type": "integer"
        },
        "flgApprovazioneFinale": {
          "type": "boolean"
        },
        "EsportatoERP": {
          "type": "boolean"
        },
        "CodTipoRichiesta": {
          "type": "string"
        },
        "CodEsitoValutazione": {
          "type": "string"
        },
        "TipoRichiestaDesc": {
          "type": "string"
        },
        "CampiAggiuntivi": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CampiAggiuntiviRichiesteDTO"
          }
        }
      }
    },
    "RuoliDTO": {
      "type": "object",
      "properties": {
        "CodRuolo": {
          "type": "string"
        },
        "Descrizione": {
          "type": "string"
        },
        "Attivo": {
          "type": "boolean"
        },
        "NumUtenti": {
          "format": "int32",
          "type": "integer"
        },
        "Diritti": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DirittiDTO"
          }
        }
      }
    },
    "DirittiDTO": {
      "type": "object",
      "properties": {
        "CodDiritto": {
          "type": "string"
        },
        "Descrizione": {
          "type": "string"
        },
        "Gruppo": {
          "type": "string"
        },
        "Abilitazione": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Ruoli_TipiRichiesteDTO": {
      "type": "object",
      "properties": {
        "IdRuoli_TipiRichieste": {
          "format": "int32",
          "type": "integer"
        },
        "CodRuolo": {
          "type": "string"
        },
        "CodTipoRichiesta": {
          "type": "string"
        },
        "TipoRichiestaDesc": {
          "type": "string"
        },
        "RuoloDesc": {
          "type": "string"
        }
      }
    },
    "TipiCampiAggiuntiviDTO": {
      "type": "object",
      "properties": {
        "CodiceCampo": {
          "type": "string"
        },
        "Descrizione": {
          "type": "string"
        },
        "Tipo": {
          "type": "string"
        },
        "Combo_SQL": {
          "type": "string"
        },
        "Ordine": {
          "format": "int32",
          "type": "integer"
        },
        "Obbligatorio": {
          "type": "boolean"
        },
        "Gruppo": {
          "type": "string"
        }
      }
    },
    "TipiReportDTO": {
      "type": "object",
      "properties": {
        "ProviderId": {
          "format": "int32",
          "type": "integer"
        },
        "CodReport": {
          "type": "string"
        },
        "Descrizione": {
          "type": "string"
        },
        "flgAbilitato": {
          "type": "boolean"
        }
      }
    },
    "TipiReport_EsitiDTO": {
      "type": "object",
      "properties": {
        "ProviderId": {
          "format": "int32",
          "type": "integer"
        },
        "CodReport": {
          "type": "string"
        },
        "CodEsito": {
          "type": "string"
        },
        "Descrizione": {
          "type": "string"
        }
      }
    },
    "TipiRichiesteDTO": {
      "type": "object",
      "properties": {
        "CodTipoRichiesta": {
          "type": "string"
        },
        "Descrizione": {
          "type": "string"
        },
        "flgAbilitato": {
          "type": "boolean"
        },
        "NumRichieste": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "UtentiDTO": {
      "type": "object",
      "properties": {
        "IdUtente": {
          "format": "double",
          "type": "number"
        },
        "nome": {
          "type": "string"
        },
        "cognome": {
          "type": "string"
        },
        "login": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "nTelefonico": {
          "type": "string"
        },
        "nFax": {
          "type": "string"
        },
        "lingua": {
          "type": "string"
        },
        "WindowsIdentity": {
          "type": "string"
        },
        "CodRuolo": {
          "type": "string"
        },
        "nMatricola": {
          "type": "string"
        },
        "UtenteSistema": {
          "format": "int32",
          "type": "integer"
        },
        "Attivo": {
          "type": "boolean"
        },
        "NomeCognome": {
          "type": "string",
          "readOnly": true
        },
        "RuoloDesc": {
          "type": "string"
        },
        "Diritti": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DirittiDTO"
          }
        }
      }
    }
  }
}